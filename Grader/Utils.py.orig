def swap(a, b):
    c = a
    a = b
    b = c

def plot(image, x, y, c=1):
    if x < 0 or y < 0: return
    if x > 256 or y > 256: return
    #old = image.getXel(x,y)
    print 'p:'+`(x, y, c)` 
    for a in range(-1, 2):
        for b in range(-1, 2):
            if (a == 0 and b==0):
                image.setBlue(x, y, 0.1)
            else:
                if x+a < 0 or y+b < 0: continue
                if x+a > 256 or y+b > 256: continue
                old = image.getBlue(x+a, y+b)
                if (old == 0):
                    image.setBlue(x+a, y+b, 0.3)
                    
            
        
def drawLine(pix, x0, y0, x1, y1, color):
    dx = x1 - x0
    dy = y1 - y0

    plot(pix, x0, y0, color);
    if (abs(dx) > abs(dy)):          # slope < 1
        m = dy / dx;      # compute slope
        b = y0 - m*x0;
        if(dx < 0):
            dx = -1 
        else: 
            dx = 1;
        while (x0 != x1):
            x0 += dx;
            plot(pix, x0, color);
        
    elif (dy != 0): #                              // slope >= 1
        m = dx / dy;   #   // compute slope
        b = x0 - m*y0;
        if(dy < 0):
            dy = -1 
        else:
            dy = 1;
        while (y0 != y1):
            y0 += dy;
            plot(pix, round(m*y0 + b), color);
        
    
def paintPath(image, pos1, pos2, color, board_size, board_scale, texture_size):
    def scale(val, inscale, outscale, offset):
        return int(max(0, min(texture_size-1, (val / inscale * outscale) + offset)))
        
    x1 =  scale(pos1[0], board_size*board_scale, texture_size, texture_size/2)
    y1 =  scale(pos1[1], board_size*board_scale, texture_size, texture_size/2)
    x2 =  scale(pos2[0], board_size*board_scale, texture_size, texture_size/2)
    y2 =  scale(pos2[1], board_size*board_scale, texture_size, texture_size/2)
    #print `(x1, x2, y1, y2)`
    if (x1 <> x2) or (y1 <> y2):
        print "L:"+`(x1, x2, y1, y2)`
        drawLine(image, x1, y1, x2, y2, color) 

